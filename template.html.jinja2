<!DOCTYPE html>
<html lang="en-US">

<head>

  <title>{{data.title}}</title>
  <meta charset="UTF-8">
  <meta name="Keywords" content="{{data.keywords}}">
  <meta name="Description" content="{{data.description}}">
  <meta name="Version" content="{{version}}">

  <!-- Styles -->
  <style>
    body {
      font: 16px sans-serif;
      background-color: #F0F0F0;
      min-width: 360px;
      margin: 0 20px 0 20px;
    }
    h1 {
      font-size: 140%;
      font-weight: bold;
      text-transform: uppercase;
      margin: 20px 0 10px 0;
    }
    h2 {
      font-size: 120%;
      font-weight: bold;
      margin: 20px 0 6px 0;
    }

    img {
      padding: 2px 0 2px 0;
      max-width: 100%;
    }

    input[type=button] {
      display: inline-block;
      font-size: 1em;
      background-color: #fff;
      border: 1px solid #888;
      border-radius: 4px;
    }

    .spreadsheet {
    }

    .license {
      max-width: 480px;
      padding: 40px 0 40px 0;
    }

    /* Column 1: Variable name */
    .sname {
      display: inline-block;
      min-width: {{data.width.name}};
    }

    /* Column 2: Variable Value (input form) */
    input[type=text], select, textarea {
      width: 100%;
      padding: 0 4px 0 4px;
      font: inherit;
      text-align: right;
      box-sizing: border-box;
      border: 1px solid #888;
      border-radius: 4px;
    }
    .sval {
      display: inline-block;
      width: {{data.width.value}};
    }
    .sval input[type=text] {
      background-color: #FFFFC0;
    }

    .sconst {
      display: inline-block;
      width: {{data.width.value}};
    }
    .sconst input[type=text] {
      background-color: #FFFFFF;
    }

    .scalc  {
      display: inline-block;
      width: {{data.width.value}};
    }
    .scalc input[type=text] {
      background-color: #C0FFFF;
    }

    /* Column 3: Variable Units */
    .sunit {
      display: inline-block;
      min-width: {{data.width.units}};
      text-align: center;
      border: 1px solid #888;
      border-radius: 4px;
    }

    /* Column 4: Variable comment */
    .scoment {
      display: inline-block;
      min-width: {{data.width.comment}};
    }

    /* Rows */
    .row {
      padding-bottom: 2px;
    }

  </style>

{%- macro to_numexp_1(num) -%} {{"%1.0e"|format(num|float)}} {%- endmacro %}
{%- macro to_numexp_5(num) -%} {{"%5.4e"|format(num|float)}} {%- endmacro %}

  <script>

    <!-- Init calculations -->
    function init() {
       reset_var();
       calc();
    }

    <!-- Compute calculations -->
    function calc() {
    {%- for datarow in rows %} {%- if datarow.type == 'var' %}

      <!-- Variable: {{datarow.comment}} -->
      {{datarow.id}} = tonum("{{datarow.id}}")
        {%- if datarow.prefix != 1 %} * {{ to_numexp_1(datarow.prefix|float) }}{% endif %};
    {%- endif %} {%- endfor %}

    {%- for datarow in rows -%} {%- if datarow.type == 'const' %}

      <!-- Constant: {{datarow.comment}} -->
      {{datarow.id}} = {{datarow.value}};
      document.getElementById("{{datarow.id}}").value = "{{to_numexp_5(datarow.value)}}";
    {%- endif %} {%- endfor %}

    {%- for datarow in rows -%} {%- if datarow.type == 'calc' %}

      <!-- Calculation: {{datarow.comment}} -->
      {%- if datarow.calc is iterable and datarow.calc is not string %}
        {%- for calc in datarow.calc %}
      {{calc}};
        {%- endfor %}
      {%- else %}
      {{datarow.calc}};
      {%- endif %}
    {%- endif %} {%- endfor %}

    {%- for datarow in rows -%} {%- if datarow.type == 'calc' %}

      <!-- Print calc: {{datarow.comment}} -->
      document.getElementById("{{datarow.id}}").value = roundnum({{datarow.id}}
        {%- if datarow.prefix != 1 %} * {{ to_numexp_1(1.0/datarow.prefix|float) }}{% endif %}, {{data.resolution}});
    {%- endif %} {%- endfor %}
    }

    <!-- Reset variables to default values -->
    function reset_var() {
      {%- for datarow in rows %} {%- if datarow.type == 'var' %}
      document.getElementById("{{datarow.id}}").value = {% if datarow.value or datarow.value == 0 %}{{datarow.value}}{% else %}''{% endif %};
      {%- endif %} {%- endfor %}
      calc();
    }

    <!-- Clear variables -->
    function clear_var() {
      {%- for datarow in rows %} {%- if datarow.type == 'var' %}
      document.getElementById("{{datarow.id}}").value = '';
      {%- endif %} {%- endfor %}
      calc();
    }

    <!-- Save variables -->
    function save_var() {
      var expiresdate = new Date(2068, 1, 02, 11, 20);
      var names = [{%- for datarow in rows %} {%- if datarow.type == 'var' %}"{{datarow.id}}", {% endif %} {%- endfor %} ];
      for(var i=0; i<names.length; i++) {
        document.cookie = names[i] + " = " + encodeURIComponent(tonum(names[i])) + "; expires=" + expiresdate.toUTCString();
      }
    }

    <!-- Load variables -->
    function load_var() {
      {%- for datarow in rows %} {%- if datarow.type == 'var' %}
      document.getElementById("{{datarow.id}}").value = getCookie("{{datarow.id}}");
      {%- endif %} {%- endfor %}
      calc();
    }

    <!-- Read cookies -->
    function getCookie(name) {
      var re = new RegExp(name + "=([^;]+)");
      var value = re.exec(document.cookie);
      return (value != null) ? unescape(value[1]) : null;
    }

    <!-- Evalue inputs with '.' or ',' as comma -->
    function tonum(id) {
      val = document.getElementById(id).value.replace(',', '.');
      if (isNaN(val)) return '';
      return val;
    }

    <!-- Round number to digits -->
    function roundnum(number, digits) {
      if (isNaN(number) || !isFinite(number)) return '';
      if (number == 0) return '0';
      if (Math.sign(number) < 0)
        sign = '-';
      else
        sign = '';
      exp = Math.ceil(Math.log(number)/Math.log(10) + 0.000001);
      number = Math.round(Math.abs(number) * Math.pow(10, digits - exp)) + '';
      if (digits > exp) { <!-- decimals -->
        if (exp <= 0) { <!-- all decimals -->
          return sign + '0.0000000'.substr(0, 2 - exp) + number;
        }
        else { <!-- integer and decimals -->
          return sign + number.substr(0, exp) + '.' + number.substr(exp, digits - exp);
        }
      }
      else { <!-- no decimals -->
        number = number  + '0000000000'
        return sign + number.substr(0, exp);
      }
    }

    <!-- Manage keys [Enter] and [tab] -->
    function OnKeyPress(evt) {
      var evt = (evt) ? evt : ((event) ? event : null);
      var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
      if (node.type=="text") {
        if (evt.keyCode == 9) { calc(); return; }
        if (evt.keyCode == 13) { calc(); return false; }
      }
    }
    document.onkeypress = OnKeyPress;

  </script>

</head>


<body onload="init()">

  <div class="spreadsheet">
  <h1>{{data.title}}</h1>

    {%- for datarow in rows %}

    {%- if datarow.type == 'header' %}

    <!--  Header: {{datarow.name}} -->
    <h2 {%- if 'id' in datarow %} id="{{datarow.id}}"{% endif %}>{{datarow.name}}</h2>

    {%- elif datarow.type == 'html' %}

    <!--  Section: {{datarow.name}} -->
    {{datarow.code}}

    {%- elif datarow.type == 'img' %}

    <!--  Image: {{datarow.name}} -->
    <img alt="{{datarow.name}}" {% if 'width' in datarow %}width="{{datarow.width}}" {% endif %}src="{{binobjects[datarow.src]}}">

    {%- else %}

    <!--  Row  -->
    <div class="row">
      <div class="sname">{{datarow.name}}</div>

    {%- if datarow.type == 'const' %}
      <div class="sconst"> <form> <input type="text" id="{{datarow.id}}"> </form> </div>
    {%- endif %}

    {%- if datarow.type == 'var' %}
      <div class="sval"> <form> <input type="text" id="{{datarow.id}}"> </form> </div>
    {%- endif %}

    {%- if datarow.type == 'calc' %}
      <div class="scalc"> <form> <input type="text" id="{{datarow.id}}"> </form> </div>
    {%- endif %}
      <div class="sunit">{% if datarow.unit %}{{datarow.unit}}{% else %}&nbsp;{% endif %}</div>
      <div class="scoment">{{datarow.comment}}</div>
    </div>

    {%- endif %}
  {%- endfor %}

  </div>  <!-- End spreadsheet -->


  <!-- License -->
  <div class="license">
    This work by <a href="https://github.com/Picuino/Picalc">Picuino</a>
    is licensed under a 
	<a rel="MIT License" href="http://www.gnu.org/licenses/gpl-3.0.txt">
	   GPL version 3 license</a>.
  </div>

</body>

</html>
